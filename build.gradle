buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://repository.jboss.org/nexus/content/groups/public/"
        }
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            url = "https://plugins.gradle.org/m2/"
        }
        maven {
            name = 'sponge'
            url = 'https://repo.spongepowered.org/maven'
        }
    }
    dependencies {
        classpath 'com.google.code.gson:gson:2.8.8'
        classpath 'org.hibernate.build.gradle:gradle-maven-publish-auth:2.0.1'
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'java'
    id 'maven'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'net.kyori.blossom' version '1.1.0'
}

allprojects {
    group = 'net.impactdev'
    version = "1.2.0"
}

apply plugin: 'net.minecraftforge.gradle'

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'official', version: '1.16.5'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'net.minecraftforge.gradle'

    minecraft {
        // The mappings can be changed at any time, and must be in the following format.
        // snapshot_YYYYMMDD   Snapshot are built nightly.
        // stable_#            Stables are built at the discretion of the MCP team.
        // Use non-default mappings at your own risk. they may not always work.
        // Simply re-run your setup task after changing the mappings to update your workspace.
        mappings channel: 'official', version: '1.16.5'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            name = 'Sponge Repo'
            url = 'https://repo.spongepowered.org/repository/sponge-releases'
        }
        maven {
            name = "Impact-Dev"
            url = "https://maven.impactdev.net/repository/development/"
        }
        maven {
            // For fernflower
            name = 'sponge'
            url = 'https://repo.spongepowered.org/maven'
        }
        maven { url = 'https://jitpack.io' }
        ivy {
            url = "https://download.nodecdn.net/containers"
            patternLayout {
                artifact "/[organisation]/[module]/release/[revision]/[ext]"
            }
            metadataSources {
                artifact()
            }
        }
        mavenLocal()
        maven {
            url "https://hub.spigotmc.org/nexus/content/repositories/snapshots"
        }
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots"
        }
        maven { url = "https://repo.aikar.co/content/groups/aikar/" }
        maven { url = "https://hub.spigotmc.org/nexus/content/groups/public/" }
        maven { url = "https://repo.aikar.co/content/groups/aikar/" }
    }

    dependencies {
        // Forge
        minecraft 'net.minecraftforge:forge:1.16.5-36.2.20'

        // Pixelmon
        shadow 'reforged:server:9.0.2@Pixelmon-1.16.5-9.0.2-server.jar'

        // Additional
        shadow 'org.slf4j:slf4j-api:1.7.25'
        shadow 'net.lingala.zip4j:zip4j:1.3.2'
    }

    jar {
        manifest.attributes(
                'MixinConfigs': 'mixins.impactdev.reforged.json',
                'TweakOrder': 0,
        )
    }

    shadowJar {
        classifier ''
        exclude 'dummyThing'
        dependencies {
            include dependency(":api")
        }
    }

}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.20'
}

task copyJars(type: Copy) {
    dependsOn subprojects.build
    from subprojects.collect { it.tasks.withType(Jar) }
    into "$buildDir/allJars"
    exclude '*-all.jar'
    exclude '*-sources.jar'
    exclude 'api*.jar'
    exclude 'common*.jar'
    exclude 'spigot*.jar'
    exclude 'sponge*.jar'
    exclude 'plugin*.jar'
    exclude 'reforged*.jar'
    exclude 'generations*.jar'
    exclude 'bungee*.jar'
}

build.dependsOn copyJars